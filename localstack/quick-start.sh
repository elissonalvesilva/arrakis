#!/bin/bash

# Colors for output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
PURPLE='\033[0;35m'
NC='\033[0m' # No Color

echo -e "${BLUE}"
echo "üöÄ Arrakis LocalStack Quick Start"
echo "================================="
echo -e "${NC}"

# Check if Docker is running
if ! docker info > /dev/null 2>&1; then
    echo -e "${RED}‚ùå Docker is not running. Please start Docker first.${NC}"
    exit 1
fi

# Check if we're in the right directory
if [ ! -f "docker-compose.yml" ]; then
    echo -e "${RED}‚ùå Please run this script from the localstack directory.${NC}"
    exit 1
fi

echo -e "${YELLOW}üìã Prerequisites check...${NC}"
echo -e "${GREEN}‚úÖ Docker is running${NC}"
echo -e "${GREEN}‚úÖ In correct directory${NC}"

echo ""
echo -e "${YELLOW}üèóÔ∏è  Setting up LocalStack environment...${NC}"

# Start LocalStack
echo -e "${BLUE}üöÄ Starting LocalStack...${NC}"
docker-compose up -d

if [ $? -ne 0 ]; then
    echo -e "${RED}‚ùå Failed to start LocalStack${NC}"
    exit 1
fi

echo -e "${GREEN}‚úÖ LocalStack container started${NC}"

# Wait for LocalStack to be ready
echo -e "${YELLOW}‚è≥ Waiting for LocalStack to initialize...${NC}"
sleep 15

# Check if LocalStack is ready
echo -e "${BLUE}üè• Checking LocalStack health...${NC}"
for i in {1..10}; do
    if curl -s http://localhost:4566/health > /dev/null 2>&1; then
        echo -e "${GREEN}‚úÖ LocalStack is healthy!${NC}"
        break
    fi
    
    if [ $i -eq 10 ]; then
        echo -e "${RED}‚ùå LocalStack failed to start properly${NC}"
        echo -e "${YELLOW}üí° Try running: docker-compose logs localstack${NC}"
        exit 1
    fi
    
    echo -e "${YELLOW}   Attempt $i/10...${NC}"
    sleep 3
done

# Verify SQS queues were created
echo -e "${BLUE}üìã Verifying SQS queues...${NC}"
docker-compose exec -T localstack awslocal sqs list-queues --region us-east-1 > /dev/null 2>&1

if [ $? -eq 0 ]; then
    echo -e "${GREEN}‚úÖ SQS queues are ready${NC}"
else
    echo -e "${YELLOW}‚ö†Ô∏è  SQS queues not found, this is normal on first run${NC}"
fi

echo ""
echo -e "${GREEN}üéâ LocalStack setup completed successfully!${NC}"
echo ""
echo -e "${PURPLE}üìç Service Information:${NC}"
echo -e "   LocalStack Endpoint: ${BLUE}http://localhost:4566${NC}"
echo -e "   SQS Standard Queue: ${BLUE}http://localhost:4566/000000000000/arrakis-test-queue${NC}"
echo -e "   SQS High Volume Queue: ${BLUE}http://localhost:4566/000000000000/arrakis-high-volume-queue${NC}"
echo -e "   SQS FIFO Queue: ${BLUE}http://localhost:4566/000000000000/arrakis-fifo-queue.fifo${NC}"

echo ""
echo -e "${PURPLE}üöÄ Next Steps:${NC}"
echo -e "   1. Test Arrakis: ${YELLOW}make test-basic${NC}"
echo -e "   2. Send messages: ${YELLOW}make send-messages${NC}"
echo -e "   3. Check status: ${YELLOW}make status${NC}"
echo -e "   4. View logs: ${YELLOW}make logs${NC}"
echo -e "   5. Stop LocalStack: ${YELLOW}make stop${NC}"

echo ""
echo -e "${BLUE}üí° Pro Tips:${NC}"
echo -e "   ‚Ä¢ Run the test and message sender in separate terminals"
echo -e "   ‚Ä¢ Watch how Arrakis adapts polling intervals to message volume"
echo -e "   ‚Ä¢ Try different message patterns to see adaptive behavior"
echo -e "   ‚Ä¢ Use 'make purge' to clear queues between tests"

echo ""
echo -e "${GREEN}‚ú® Happy testing with Arrakis! ‚ú®${NC}"